{"ast":null,"code":"import React,{useState}from'react';import Col from'react-bootstrap/Col';import Row from'react-bootstrap/Row';import Form from\"react-bootstrap/Form\";import Button from'../../Button';import*as yup from\"yup\";import $ from'jquery';import{useForm}from\"react-hook-form\";var contactSchema=yup.object().shape({name:yup.string(),email:yup.string().email().required(''),subject:yup.string().min(1).required(''),text:yup.string().min(10).required('')});export default function ContactFrom(props){function onSubmit(mail){var options={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(mail)};console.log(mail);fetch('/mail',options).then(function(response){return response.json();}).then(function(res){console.log(res);});console.log(mail.value);$('.contact-form__input').val('');$('.contact-form__accepted').removeClass('contact-form__hidden');}var _useForm=useForm({validationSchema:contactSchema}),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;return/*#__PURE__*/React.createElement(Col,{className:\"contact-form\",sm:\"12\",md:\"12\",lg:\"8\"},/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"h3\",{className:\"contact-form__header\"},\"Send en Melding\"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form.Group,{className:\"contact-form__item\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Navn\"),/*#__PURE__*/React.createElement(Form.Control,{name:\"name\",type:\"text\",placeholder:\"\",className:\"contact-form__input\",ref:register()}))),/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Form.Group,{className:\"contact-form__item\"},/*#__PURE__*/React.createElement(Form.Label,null,\"E-Post\",/*#__PURE__*/React.createElement(\"span\",{className:\"contact-form__required\"},\" *\")),/*#__PURE__*/React.createElement(Form.Control,{name:\"email\",type:\"email\",placeholder:\"\",className:\"contact-form__input\",ref:register({required:true})}),errors.email&&/*#__PURE__*/React.createElement(\"p\",{className:\"contact-form__error\"},\"Legg ved en Epost for \\xE5 komme i kontakt\")))),/*#__PURE__*/React.createElement(Form.Group,{className:\"contact-form__item\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Emne\",/*#__PURE__*/React.createElement(\"span\",{className:\"contact-form__required\"},\" *\")),/*#__PURE__*/React.createElement(Form.Control,{size:\"lg\",name:\"subject\",type:\"text\",placeholder:\"\",className:\"contact-form__input\",ref:register({required:true})}),errors.subject&&/*#__PURE__*/React.createElement(\"p\",{className:\"contact-form__error\"},\"Trenger ett emne for \\xE5 sende meldingen\")),/*#__PURE__*/React.createElement(Form.Group,{className:\"contact-form__item\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Melding\",/*#__PURE__*/React.createElement(\"span\",{className:\"contact-form__required\"},\" *\")),/*#__PURE__*/React.createElement(Form.Control,{size:\"sm\",rows:\"3\",as:\"textarea\",name:\"text\",type:\"text\",placeholder:\"\",className:\"contact-form__input\",ref:register({required:true})}),errors.message&&/*#__PURE__*/React.createElement(\"p\",{className:\"contact-form__error\"},\"Meldingen m\\xE5 v\\xE6re minst 10 tegn lang\")),/*#__PURE__*/React.createElement(Form.Group,{className:\"contact-form__item contact-form__item--submit\"},/*#__PURE__*/React.createElement(\"p\",{className:\"contact-form__hidden contact-form__accepted\"},\"Your message was sent\"),/*#__PURE__*/React.createElement(Button,{type:\"submit\",value:\"Send\"},/*#__PURE__*/React.createElement(\"span\",null,\"Send Melding\")))));}","map":{"version":3,"sources":["/Users/Kristoffer/Documents/Skole/Noroff/Exam/hoftun-utvikling/client/src/components/layout/contact-page/ContactForm.js"],"names":["React","useState","Col","Row","Form","Button","yup","$","useForm","contactSchema","object","shape","name","string","email","required","subject","min","text","ContactFrom","props","onSubmit","mail","options","method","headers","body","JSON","stringify","console","log","fetch","then","response","json","res","value","val","removeClass","validationSchema","register","handleSubmit","errors","message"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from \"react-bootstrap/Form\";\nimport Button from '../../Button';\nimport * as yup from \"yup\";\nimport $ from 'jquery';\nimport { useForm } from \"react-hook-form\";\n\nconst contactSchema = yup.object().shape({\n\tname: yup.string(),\n    email: yup.string().email().required(''),\n    subject: yup.string().min(1).required(''),\n    text: yup.string().min(10).required('')\n});\n\nexport default function ContactFrom (props) {\n    function onSubmit(mail) {\n        const options = {\n            method: 'POST',\n            headers : {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(mail)\n        };\n        console.log(mail);\n        fetch('/mail', options)\n            .then(response => response.json())\n            .then(res => {\n            console.log(res);\n        })\n        console.log(mail.value)\n        $('.contact-form__input').val('');\n        $('.contact-form__accepted').removeClass('contact-form__hidden');\n    }\n    const { register, handleSubmit, errors } = useForm({\n        validationSchema: contactSchema\n    });\n    \n    \n\n    return (\n        <Col className='contact-form' sm='12' md='12' lg='8'>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <h3 className='contact-form__header'>Send en Melding</h3>\n                <Row>\n                    <Col>\n                        <Form.Group className='contact-form__item'>\n                            <Form.Label>Navn</Form.Label>\n                            <Form.Control name='name' type='text' placeholder='' className='contact-form__input' ref={register()}/>\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group className='contact-form__item'>\n                            <Form.Label>E-Post<span className='contact-form__required'> *</span></Form.Label>\n                            <Form.Control name='email' type='email' placeholder='' className='contact-form__input' ref={register({ required: true })}/>\n                            {errors.email && <p className=\"contact-form__error\">Legg ved en Epost for Ã¥ komme i kontakt</p>}\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Form.Group className='contact-form__item'>\n                    <Form.Label>Emne<span className='contact-form__required'> *</span></Form.Label>\n                    <Form.Control size='lg' name='subject' type='text' placeholder='' className='contact-form__input' ref={register({ required: true })}/>\n                    {errors.subject && <p className=\"contact-form__error\">Trenger ett emne for Ã¥ sende meldingen</p>}\n                </Form.Group>\n                <Form.Group className='contact-form__item'>\n                    <Form.Label>Melding<span className='contact-form__required'> *</span></Form.Label>\n                    <Form.Control size='sm' rows='3' as='textarea' name='text' type='text' placeholder='' className='contact-form__input' ref={register({ required: true })}/>\n                    {errors.message && <p className=\"contact-form__error\">Meldingen mÃ¥ vÃ¦re minst 10 tegn lang</p>}\n                </Form.Group>\n                <Form.Group className='contact-form__item contact-form__item--submit'>\n                    <p className=\"contact-form__hidden contact-form__accepted\">Your message was sent</p>\n                    <Button type='submit' value='Send'>\n                        <span>Send Melding</span>\n                    </Button>\n                </Form.Group>\n            </Form>\n        </Col>\n    )\n}"]},"metadata":{},"sourceType":"module"}